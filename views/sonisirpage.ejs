<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <!-- Compiled and minified CSS -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css">
  <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
  <title>Shanti SMS</title>

</head>

<body class="red lighten-5">
  <nav class="red lighten-5">
    <div class="nav-wrapper black-text">
      <a href="#" class="brand-logo black-text">Shanti SMS</a>
      <ul id="nav-mobile" class="right hide-on-med-and-down">
        <!-- <li><a class="black-text z-depth-5">Your Credit Balance is : 50000</a></li> -->
        <li><a class="waves-effect waves-light black-text">
            <h6><%= `Welcome, ${user.email}` %></h6>
          </a></li>
        <a href="#" data-target="slide-out" class="sidenav-trigger">menu</a>
        
        <li><a href="/logout" class="waves-effect waves-light btn red z-depth-5">Log Out</a></li>
      </ul>
    </div>
  </nav>



  <div class="fixed-action-btn">
    <a class="btn-floating btn-large red z-depth-5">
      <i class="large material-icons">mode_edit</i>
    </a>
    <ul>
      <li><a href="#addNewUserModal" class="btn-floating red modal-trigger"><i class="material-icons">group_add</i></a>
      </li>
      <li><a  id="showCreditsBtn" href="#showCreditsModal" class="btn-floating yellow darken-1 modal-trigger"><i class="material-icons">shopping_cart</i></a></li>
      <li><a class="btn-floating green"><i class="material-icons">cloud_download</i></a></li>
      <li><a class="btn-floating blue"><i class="material-icons">attach_file</i></a></li>
      <li><a class="btn-floating blue"><i class="material-icons">bug_report</i></a></li>
    </ul>
  </div>



  <!-- ADD NEW USER MODAL -->
  <div id="addNewUserModal" class="modal red lighten-5">
    <div class="modal-content">
      <h4 class="center">Create New Customer</h4>
      <div class="row">
        <form class="col s12" id="createNewUserForm">
          <div class="row">
            <div class="input-field col s12">
              <input name="fullName" id="fullName" type="text" class="validate" required>
              <label for="fullName">Full Name</label>
            </div>
          </div>
          <div class="row">
            <div class="input-field col s12">
              <input name="email" id="email" type="email" class="validate" required>
              <label for="email">Email</label>
              <div class="email-error"></div>
            </div>
          </div>
          <div class="row">
            <div class="input-field col s12">
              <input name="password" id="password" type="password" class="validate" required>
              <label for="password">Password</label>
              <div class="password-error"></div>
            </div>
          </div>
          <div class="row">
            <div class="input-field col s12">
              <input name="smsUserName" id="smsUserName" type="text" class="validate" required>
              <label for="smsUserName">SMS User Name</label>
              <div class="smsUserName-error"></div>
            </div>
          </div>
          <div class="row">
            <div class="input-field col s12">
              <input name="smsKey" id="smsKey" type="text" class="validate" required>
              <label for="smsKey">SMS Key</label>
              <div class="smsKey-error"></div>
            </div>
          </div>
          <div class="row">
            <div class="input-field col s12">
              <input name="accUsage" id="accUsage" type="text" class="validate" required>
              <label for="accUsage">Acc Usage</label>
              <div class="accUsage-error"></div>
            </div>
          </div>
          <div class="row">
            <div class="input-field col s12">
              <input name="entityid" id="entityid" type="text" class="validate" required>
              <label for="entityid">Entity Id</label>
            </div>
          </div>

          <button class="waves-effect waves-light btn red center">Submit</button>

        </form>
      </div>
    </div>
  </div>



 <!-- SHOW CREDITS MODAL -->
  <div id="showCreditsModal" class="modal red lighten-5">
    <div class="modal-content">
      <div class="row">
        <div class="col l6">
          <div class="card blue-grey darken-1 z-depth-5">
            <div class="card-content white-text">
              <span class="card-title">Your Whatsapp Credits</span>
              <h5 class="center" id="soniSirAvailableCredits"></h5>
            </div>
          </div>
        </div>
        <div class="col l6">
          <div class="card blue-grey darken-1 z-depth-5">
            <div class="card-content white-text">
              <span class="card-title">Customer's Whatsapp Credits</span>
              <h5 class="center" id="customersAvailableCredits"></h5>
            </div>
          </div>
        </div>
      </div>
      <div class="row">
        <div class="col l6">
          <div class="card blue-grey darken-1 z-depth-5">
            <div class="card-content white-text">
              <span class="card-title">Your Transactional SMS Credits</span>
              <h5 class="center" id="soniSirAvailableSMSCredits"></h5>
            </div>
          </div>
        </div>
        <div class="col l6">
          <div class="card blue-grey darken-1 z-depth-5">
            <div class="card-content white-text">
              <span class="card-title">Your DLT SMS Credits</span>
              <h5 class="center" id="soniSirAvailabledltSMSCredits"></h5>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>




  <!-- ISSUE CREDITS MODAL -->
  <div id="issueCreditsToCustomerModal" class="modal red lighten-5">
    <div class="modal-content">
      <h4 class="center">Issue Credits</h4>
      <div class="row">
        <form class="col s12" id="issueCreditsToCustomerForm">
          <div class="row">
            <div class="input-field col s12">
              <input name="issueCredits" id="issueCredits" type="text" class="validate" required>
              <label for="issueCredits">Credits</label>
            </div>
          </div>
          <div class="row" style="display: none;">
            <div>
              <input name="customerID" id="customerID" type="text">
            </div>
          </div>
          <h5 id="numberError" class="red-text" style="display: none;">Please enter valid numbers</h5>
          <button class="waves-effect waves-light btn red center">Submit</button>
        </form>
      </div>
      <h6 id="insufficientCreditsErrorMsg" class="red-text" style="display: none;">Insufficient credits available in your account.</h6>
    </div>
  </div>



  <!-- DELETE CUSTOEMR MODAL -->
  <div id="deleteCustomerModal" class="modal red lighten-5">
    <div class="modal-content">
      <h4 class="center">Are you sure about deleting below customer ?</h4>
      <div class="row">
        <form class="col s12" id="deleteCustomerForm">
          <div class="row">
            <div class="input-field col s12 center">
              <h5 id="deleteCustomerDislayName"></h5>
            </div>
          </div>
          <button class="waves-effect waves-light btn red center">Delete</button>
        </form>
      </div>
    </div>
  </div>





  <div class="container" style="margin-top: 30px;">
    <table class="highlight centered z-depth-5">
      <thead>
        <tr>
          <th>User Name</th>
          <th>Email</th>
          <th>SMS User Name</th>
          <th>SMS Key</th>
          <th>Acc Usage</th>
          <th>Entity ID</th>
          <th>Whatsapp Customer ID</th>
          <th>Connected Whatsapp No</th>
          <th>Balance Credits</th>
          <th>Issue Credits</th>
          <th>Delete User</th>
        </tr>
      </thead>
        
       <% if (userListForSoniSirPage !='' ) { %>

        <% userListForSoniSirPage.forEach((elem, index)=> { %>
          <% console.log(elem.smsAccUsg); %>
          <tbody>
            <tr>
              <td>
                <%= elem.fullName %>
              </td>
              <td>
                <%= elem.email %>
              </td>
              <td>
                <%= elem.smsUserName %>
              </td>
              <td>
                <%= elem.smsKey %>
              </td>
              <td>
                <%= elem.smsAccUsg %>
              </td>
              <td>
                <%= elem.entityId %>
              </td>
              <td>
                <%= elem._id %>
              </td>

              <% 
                      // Initialize an empty array to store the connectedWano values
                      const connectedWanoArr = [];

                      if (elem.connectedWhatsAppDevices.length > 0) { 
                        // Loop through each devices object and push connectedWano value into the array
                        elem.connectedWhatsAppDevices.forEach((devices, index) => { 
                          connectedWanoArr.push(devices.connectedWano);
                        });
                      } 
                      %>

                      <% 
                      // Check if the connectedWanoArr is not empty
                      if (connectedWanoArr.length > 0) { 
                      %>
                        <td>
                          <!-- Display the connectedWanoArr as a comma-separated list -->
                          <%= connectedWanoArr.join(', ') %>
                        </td>
                      <% } else { %>
                        <td>
                          <!-- Display 0 if the connectedWanoArr is empty -->
                          <%= 0 %>
                        </td>
                      <% } %>
              
                          
                        <td>
                          <%= elem.AvailableCredits %>
                        </td>
                        <td id="<%= elem._id %>"><i href="#issueCreditsToCustomerModal"
                            class="material-icons issueCreditsBtn modal-trigger">add_shopping_cart</i></td>

                        <td id="<%= elem._id %>" data-fullname="<%= elem.fullName %>"><i href="#deleteCustomerModal"
                            class="material-icons deleteCustomerBtn modal-trigger">delete_sweep</i></td>
                                    </tr>
                                  </tbody>
                                  <% }) %>

                          <% } else { %>

                            <!-- <h5>Couldn't find users in Database</h3> -->
                              <% } %> 
      
    </table>
  </div>



  <!-- Compiled and minified JavaScript -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>
  <script>

    document.addEventListener('DOMContentLoaded', function () {
      var elems = document.querySelectorAll('.dropdown-trigger');
      var instances = M.Dropdown.init(elems, {});
      var elems = document.querySelectorAll('.fixed-action-btn');
      var instances = M.FloatingActionButton.init(elems, {});
      var elems = document.querySelectorAll('.modal');
      var instances = M.Modal.init(elems, {});

    });
    const form = document.querySelector('#createNewUserForm');
    let emailError = document.querySelector('.email-error');
    let passwordError = document.querySelector('.password-error');




    form.addEventListener('submit', async (event) => {
      event.preventDefault();
      emailError.textContent = '';
      passwordError.textContent = '';
      const fullName = form.fullName.value;
      const email = form.email.value;
      const password = form.password.value;
      const smsUserName = form.smsUserName.value;
      const smsKey = form.smsKey.value;
      const smsAccUsg = form.accUsage.value;
      const entityId = form.entityid.value;
      try {
        const res = await fetch('/register', {
          method: 'POST',
          body: JSON.stringify({ fullName, email, password, smsUserName, smsKey, smsAccUsg, entityId }),
          headers: { 'Content-Type': 'application/json' }
        });
        const data = await res.json();
        if (data.errors) {
          emailError.textContent = data.errors.email;
          passwordError.textContent = data.errors.password;
        }
        if (data.user) {
          location.assign('/sonisirpage');
        }
      } catch (error) {
        console.log(error);
      }
    })

    // INJECT CUSTOMER ID TO THE MODAL
    const issueCreditsBtn = document.querySelectorAll('.issueCreditsBtn');
    issueCreditsBtn.forEach((elem) => {
      elem.addEventListener('click', function (event) {
        event.preventDefault();
        const customerId = this.parentNode.id;
        console.log(customerId);
        const issueCreditsmodal = M.Modal.getInstance(document.querySelector('#issueCreditsToCustomerModal'));
        const customerIDHolder = document.querySelector('#customerID');
        customerIDHolder.value = customerId;
      });
    });



    const issueCreditsToCustomerForm = document.querySelector('#issueCreditsToCustomerForm');
    issueCreditsToCustomerForm.addEventListener('submit', async (event) => {
      event.preventDefault();
      let customerid = issueCreditsToCustomerForm.customerID.value;
      console.log(customerid);
      let credits = issueCreditsToCustomerForm.issueCredits.value;
      if (credits < 1 || isNaN(credits)) {
        document.getElementById('numberError').style.display = 'block';
      } else {
        try {
          const res = await fetch('/issuecreditsendpoint', {
            method: 'POST',
            body: JSON.stringify({ customerid, credits }),
            headers: { 'Content-Type': 'application/json' }
          });
          const data = await res.json();
          console.log(data.acknowledged);
          if (data.errors) {
            // emailError.textContent = data.errors.email;
            // passwordError.textContent = data.errors.password;
          }
          if (data.acknowledged) {
            issueCreditsToCustomerForm.reset();
            let elem = document.querySelector('#issueCreditsToCustomerModal');
            M.Modal.init();
            let instance = M.Modal.getInstance(elem);
            instance.close();
            location.assign('/sonisirpage');
          }
          if (data.message === 'Insufficient Credits Available') {
            document.querySelector('#insufficientCreditsErrorMsg').style.display = 'block';
          }
        } catch (error) {
          console.log(error);
        }
      }
    });



    // delete customer
    // INJECT CUSTOMER ID TO THE MODAL
    const deleteCustomerBtn = document.querySelectorAll('.deleteCustomerBtn');
    deleteCustomerBtn.forEach((elem) => {
      elem.addEventListener('click', function (event) {
        event.preventDefault();
        const customerId = this.parentNode.id;
        const customerfullName = this.parentNode.dataset.fullname;
        const text = `Customer Name : ${customerfullName}`;
        const issueCreditsmodal = M.Modal.getInstance(document.querySelector('#deleteCustomerModal'));
        const customerIDHolder = document.querySelector('#deleteCustomerDislayName');
        customerIDHolder.classList = customerId;
        customerIDHolder.innerText = text;
      });
    });

    const deleteCustomerForm = document.querySelector('#deleteCustomerForm');
    deleteCustomerForm.addEventListener('submit', async (event) => {
      event.preventDefault();
      const customerIDHolder = document.querySelector('#deleteCustomerDislayName');
      const customerId = customerIDHolder.classList;
      try {
        const res = await fetch('/deletecustomer', {
          method: 'POST',
          body: JSON.stringify({ customerId }),
          headers: { 'Content-Type': 'application/json' }
        });
        const data = await res.json();
        console.log(data);
        if (data.message == 'Customer deleted successfully') {
          deleteCustomerForm.reset();
          let elem = document.querySelector('#deleteCustomerModal');
          M.Modal.init();
          let instance = M.Modal.getInstance(elem);
          instance.close();
          location.assign('/sonisirpage');
        } else if (data.message === 'Customer not found') {
          console.log('something went wrong');
        }
      } catch (error) {
        console.log(error);
      }
    });


    const showCreditsButn = document.querySelector('#showCreditsBtn');
    showCreditsButn.addEventListener('click', async () => {
      let soniSirAvailableCredits = document.querySelector('#soniSirAvailableCredits');
      let customersAvailableCredits = document.querySelector('#customersAvailableCredits');
      let soniSirAvailableSMSCredits = document.querySelector('#soniSirAvailableSMSCredits');
      let soniSirAvailabledltSMSCredits = document.querySelector('#soniSirAvailabledltSMSCredits');
      try {
        const res = await fetch('/showAvailableCredits', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' }
        });
        const data = await res.json();
        console.log(data);
        soniSirAvailableCredits.innerText = data.availableCredits;
        customersAvailableCredits.innerText = data.totalCustomerCredits;
        soniSirAvailableSMSCredits.innerText = data.smsCount;
        soniSirAvailabledltSMSCredits.innerText = data.dltsmsCount;
      } catch (error) {
        console.log(error);
      }
    })




  </script>
</body>

</html>